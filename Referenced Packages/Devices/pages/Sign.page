<apex:page docType="html-5.0" standardController="greatwave2__DBRF__c" showHeader="false" sidebar="false" extensions="greatwave2.DeviceBilling_RegistrationForm_ctrl">
<head>
    <meta name="viewport" content="width=device-width, initial-scale=1"/> 
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
    <apex:includeScript value="{!UrlFor($Resource.greatwave2__jQuery181,'/jquery/jquery-1.8.js')}"/>
    <apex:includeScript value="{!UrlFor($Resource.greatwave2__jQuery181,'/jquery/jquery-ui.js')}"/>    
    <apex:stylesheet value="{!UrlFor($Resource.greatwave2__jQuery181,'/jquery/jquery-ui.css')}"/>  
    <apex:includeScript value="{!UrlFor($Resource.greatwave2__jQueryMobile,'/jquery.mobile/jquery.mobile-1.4.4.min.js')}"/>
        <apex:stylesheet value="{!UrlFor($Resource.greatwave2__jQueryMobile,'/jquery.mobile/jquery.mobile-1.4.4.min.css')}"/>  
    <style type="text/css">
        #div_signcontract{ width: 99%; }
        .popupHeader{ margin: 10px; }
    </style>
    <script type="text/javascript">
        var isSign = false;
        var leftMButtonDown = false;
        
        jQuery(function(){
            if(isValid()){
                init_Sign_Canvas();
            }else{
                location.hash="#unableToSign";
            }

        });
        
        function isValid(){
            var result = true;
            if('{!JSENCODE(objDBRF.greatwave2__Status__c)}' == 'Submitted') {    
                result = false;
                jQuery('#errorMessage').append('<ul>This DBRF record cannot be signed at this stage.</ul>');
            }
            return result;
        }
    
        function fun_submit() {
            if(isSign) {
                $('#btnSubmitSign').toggleClass('btnDisabled', true).attr('disabled', 'disabled');
                $('#signdocId').show();
                var canvas = $("#canvas").get(0);
                var imgData = canvas.toDataURL();
                jQuery('#page').find('p').remove();
                jQuery('#page').find('img').remove();
                jQuery('#page').append(jQuery('<p>Your Sign:</p>'));
                jQuery('#page').append($('<img style="width:100%" id="srcImgId"/>').attr('src',imgData));
                //alert(imgData);
                jQuery('[id$=setVal]').val(imgData)
                                              
                redirectToForm();
                
            } else {
                alert('Please sign');
            }
        }
        
        function closePopUp() {
            jQuery('#divPopUpSignContract').hide();
            jQuery('#divPopUpSignContract').popup('close');
            jQuery('#divPopUpSignContract').popup('close');
            
            
        }
        
        function init_Sign_Canvas() {
            isSign = false;
            leftMButtonDown = false;
            
            //Set Canvas width
            var sizedWindowWidth = $(window).width();
            if(sizedWindowWidth > 700)
                sizedWindowWidth = $(window).width() / 2;
            else if(sizedWindowWidth > 400)
                sizedWindowWidth = sizedWindowWidth - 100;
            else
                sizedWindowWidth = sizedWindowWidth - 50;
             
             $("#canvas").width(sizedWindowWidth);
             $("#canvas").height(200);
             $("#canvas").css("border","1px solid #000");
            
             var canvas = $("#canvas").get(0);
            
             canvasContext = canvas.getContext('2d');

             if(canvasContext)
             {
                 canvasContext.canvas.width  = sizedWindowWidth;
                 canvasContext.canvas.height = 200;

                 canvasContext.fillStyle = "#fff";
                 canvasContext.fillRect(0,0,sizedWindowWidth,200);
                 
                 canvasContext.moveTo(50,150);
                 canvasContext.lineTo(sizedWindowWidth-50,150);
                 canvasContext.stroke();
                
                 canvasContext.fillStyle = "#000";
                 canvasContext.font="20px Arial";
                 canvasContext.fillText("x",40,155);
             }
             // Bind Mouse events
             $(canvas).on('mousedown', function (e) {
                 if(e.which === 1) { 
                     leftMButtonDown = true;
                     canvasContext.fillStyle = "#000";
                     var x = e.pageX - $(e.target).offset().left;
                     var y = e.pageY - $(e.target).offset().top;
                     canvasContext.moveTo(x, y);
                 }
                 e.preventDefault();
                 return false;
             });
            
             $(canvas).on('mouseup', function (e) {
                 if(leftMButtonDown && e.which === 1) {
                     leftMButtonDown = false;
                     isSign = true;
                 }
                 e.preventDefault();
                 return false;
             });
            
             // draw a line from the last point to this one
             $(canvas).on('mousemove', function (e) {
                 if(leftMButtonDown == true) {
                     canvasContext.fillStyle = "#000";
                     var x = e.pageX - $(e.target).offset().left;
                     var y = e.pageY - $(e.target).offset().top;
                     canvasContext.lineTo(x,y);
                     canvasContext.stroke();
                 }
                 e.preventDefault();
                 return false;
             });
             
             //bind touch events
             $(canvas).on('touchstart', function (e) {
                leftMButtonDown = true;
                canvasContext.fillStyle = "#000";
                var t = e.originalEvent.touches[0];
                var x = t.pageX - $(e.target).offset().left;
                var y = t.pageY - $(e.target).offset().top;
                canvasContext.moveTo(x, y);
                
                e.preventDefault();
                return false;
             });
             
             $(canvas).on('touchmove', function (e) {
                canvasContext.fillStyle = "#000";
                var t = e.originalEvent.touches[0];
                var x = t.pageX - $(e.target).offset().left;
                var y = t.pageY - $(e.target).offset().top;
                canvasContext.lineTo(x,y);
                canvasContext.stroke();
                
                e.preventDefault();
                return false;
             });
             
             $(canvas).on('touchend', function (e) {
                if(leftMButtonDown) {
                    leftMButtonDown = false;
                    isSign = true;
                }
             
             });
        }
        
        
        function getRetId() {
            //retId=getParameterByName('id');
            //if(retId.length==18) retId=retId.substring(0,15);
              return '{!JSENCODE(greatwave2__DBRF__c.Id)}';
        }
        function toDBRF() {            
            if( (typeof sforce != 'undefined') && (sforce != null) ) {
                sforce.one.navigateToSObject(getRetId());
                sforce.one.navigateToSObject(getRetId().substring(0, 15));
                
            } else {
                window.open("/"+getRetId(),"_self");
               // window.open("com.salesforce.salesforce1://entity/view?entityId="+getRetId());
               // var win = window.open('','_self');
                //win.close();
            }
        }
        
        function toObject(objectId) {            
            if( (typeof sforce != 'undefined') && (sforce != null) ) {
                sforce.one.navigateToSObject(objectId);
                sforce.one.navigateToSObject(getRetId().substring(0, 15));
            } else {
                window.open("/"+objectId,"_self");
               // window.open("com.salesforce.salesforce1://entity/view?entityId="+getRetId());
               // var win = window.open('','_self');
                //win.close();
            }
        }
        
        function getParameterByName(name) {
            name = name.replace(/[\[]/, "\\[").replace(/[\]]/, "\\]");
            var regex = new RegExp("[\\?&]" + name + "=([^&#]*)"),
            results = regex.exec(location.search);
            return results === null ? "" : decodeURIComponent(results[1].replace(/\+/g, " "));
        }
        function navigateBack()
        {
            toDBRF();
        }
       
    </script>
</head>
<body>
    <div data-role="page" id="mainPage">
        <apex:pageMessages ></apex:pageMessages>
        <div data-role="header">
            <h1>Signature Pad DBRFs</h1>
        </div><!-- /header -->
        <div data-role="content" id="divPopUpSignContract">
            <div class="ui-content popUpHeight">
                <div id="div_signcontract">
                    <canvas id="canvas">Canvas is not supported</canvas>
                    <div>
                        <input id="btnSubmitSign" type="button" data-inline="true" data-mini="true" data-theme="b" value="Submit Signature" onclick="fun_submit()" />
                        <input id="btnClearSign" type="button" data-inline="true" data-mini="true" data-theme="b" value="Clear" onclick="init_Sign_Canvas()" />
                    </div>
                </div>  
            </div>
        </div>  
    </div>
    <div data-role="page" id="unableToSign">
        <div data-role="header">
            <h1>Unable to Sign</h1>
        </div>
        <div data-role="content">
            
            <center><apex:image value="/img/msg_icons/error32.png" /><p id="errorMessage" style="font-weight:bold;"></p> </center> 
        </div>    
    </div>   
    <apex:form >
        <apex:actionFunction action="{!redirectToForm}" name="redirectToForm" oncomplete="navigateBack();"/><!--@claper :: oncomplete="postPDFOnChatter();"-->
        <!--<apex:actionFunction action="{!postPDFOnChatter}" name="postPDFOnChatter" oncomplete="navigateBack();"/>-->
        <apex:inputText value="{!imgSource}" id="setVal" style="display:none;"/>
    </apex:form>
</body>
</apex:page>