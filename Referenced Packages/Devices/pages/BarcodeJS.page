<apex:page showHeader="false" sidebar="false" standardStylesheets="false">
    <head>
        <meta charset="utf-8"/>
        <title>Barcode Scan</title>
        <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
        <!--<meta name="viewport" content="width=device-width, initial-scale=1, user-scalable=no"/>-->
        <apex:includeScript value="{!URLFOR($Resource.greatwave2__scannerJS, 'jquery-1.11.0.min.js')}"/>
        <apex:includeScript value="{!URLFOR($Resource.greatwave2__scannerJS, 'quagga.min.js')}"/>
        <apex:includeScript value="{!URLFOR($Resource.greatwave2__scannerJS, 'scale.fix.js')}"/>
        <style>        
        video {
            /*position: absolute; 
            top:0px; 
            bottom:0px; 
            right:0px;
            left:0px;
            width:100%;*/
            
            width:100%;
            height:100%;
        }
        
        
        .overlay {
            overflow: hidden;
            position: fixed;
            top: 0;
            bottom: 0;
            left: 0;
            right: 0;
            width: 100%;
            background-color: rgba(0, 0, 0, 0.3);
        }
        
        .overlay__content {
            top: 50%;
            position: absolute;
            left: 50%;
            transform: translate(-50%, -50%);
            width: 90%;
            max-height: 90%;
            max-width: 800px;
        }
        
        .overlay__close {
            position: absolute;
            right: 0;
            padding: 0.5rem;
            width: 2rem;
            height: 2rem;
            line-height: 2rem;
            text-align: center;
            background-color: white;
            cursor: pointer;
            border: 3px solid black;
            font-size: 1.5rem;
            margin: -1rem;
            border-radius: 2rem;
            z-index: 100;
            box-sizing: content-box;
        }
        
        .overlay__content video {
            width: 100%;
            height: 100%;
        }
        
        .overlay__content canvas {
            position: absolute;
            width: 100%;
            height: 100%;
            left: 0;
            top: 0;
        }
        
        #interactive.viewport {
            position: relative;
        }
        
        #interactive.viewport > canvas, #interactive.viewport > video {
            max-width: 100%;
            width: 100%;
        }
        
        canvas.drawing, canvas.drawingBuffer {
            position: absolute;
            left: 0;
            top: 0;
        }        
          
        </style>
    </head>
    <body>
        <div id="interactive" class="viewport" style="width:100%;height:100%;"/>
    </body>
    <script>

var json_cfg = JSON.parse("{!JSENCODE($Setup.greatwave2__DeviceWave_Settings__c.greatwave2__Scanner_Configuration__c)}");    
var reader_format="code_128";
if(json_cfg.decoder_readers!=null) {
    reader_format=json_cfg.decoder_readers;
}

function initQuagga() {
    Quagga.init({
        locate: false,
        inputStream: {
            name: "Live",
            type: "LiveStream",
            target: document.querySelector('#yourElement'),
            constraints: {
                width: {min: 640},
                height: {min: 480},
                aspectRatio: {min: 1, max: 100},
                facingMode: "environment" // or user
            }
        },
        decoder: {
            readers: [reader_format+"_reader"]
        }
    }, function(err) {
        if (err) {
            console.log(err);
            return
        }
        console.log("Initialization finished. Ready to start");
        Quagga.start();
    });
}

$(function() {            
    initQuagga();

    Quagga.onProcessed(function(result) {

        var drawingCtx = Quagga.canvas.ctx.overlay,
        drawingCanvas = Quagga.canvas.dom.overlay;

        if (result) {
            if (result.boxes) {
                drawingCtx.clearRect(0, 0, parseInt(drawingCanvas.getAttribute("width")), parseInt(drawingCanvas.getAttribute("height")));
                result.boxes.filter(function (box) {
                    return box !== result.box;
                }).forEach(function (box) {
                    Quagga.ImageDebug.drawPath(box, {x: 0, y: 1}, drawingCtx, {color: "green", lineWidth: 2});
                });
            }

            if (result.box) {
                Quagga.ImageDebug.drawPath(result.box, {x: 0, y: 1}, drawingCtx, {color: "#00F", lineWidth: 2});
            }

            if (result.codeResult && result.codeResult.code) {
                Quagga.ImageDebug.drawPath(result.line, {x: 'x', y: 'y'}, drawingCtx, {color: 'red', lineWidth: 3});
            }
        }
    
    });

    Quagga.onDetected(function(result) {
        var code = result.codeResult.code;
        console.log(code);
        Quagga.stop();
        if(getParameterByName("ret")!=null&&getParameterByName("ret")!="") {
            window.location=getParameterByName("ret")+"?code="+code; //"https://"+sfInstance[0]+"/apex/BarcodeSF1?code="+code;
        } else if(getParameterByName("retCmp") != null && getParameterByName("retCmp") != ""){
            var retCmp = JSON.parse(getParameterByName("retCmp"));
            retCmp.attributes.code = code;
            window.location = '/one/one.app#' + btoa(JSON.stringify(retCmp));
        }
    });
});

var sfInstance = [];
sfInstance[0]="{!JSENCODE($Setup.greatwave2__DeviceWave_Settings__c.greatwave2__Visualforce_URL__c)}"; // Visual Force
sfInstance[1]="{!JSENCODE($Setup.greatwave2__DeviceWave_Settings__c.greatwave2__Salesforce1_URL__c)}"; // one.app

function getParameterByName(name) {
    name = name.replace(/[\[]/, "\\[").replace(/[\]]/, "\\]");
    var regex = new RegExp("[\\?&]" + name + "=([^&#]*)"),
    results = regex.exec(location.search);
    return results === null ? "" : decodeURIComponent(results[1].replace(/\+/g, " "));
}

/* Swipe detection */
document.addEventListener('touchstart', handleTouchStart, false);        
document.addEventListener('touchmove', handleTouchMove, false);
var xDown = null;                                                        
var yDown = null;                                              
function handleTouchStart(evt) {                                         
    xDown = evt.touches[0].clientX;                                      
    yDown = evt.touches[0].clientY;                                      
};
function handleTouchMove(evt) {
    if ( ! xDown || ! yDown ) {
        return;
    }

    var xUp = evt.touches[0].clientX;                                    
    var yUp = evt.touches[0].clientY;

    var xDiff = xDown - xUp;
    var yDiff = yDown - yUp;

    if ( Math.abs( xDiff ) > Math.abs( yDiff ) ) {/*most significant*/
        if ( xDiff > 0 ) {
            console.log("left swipe");
        } else {
            console.log("right swipe");
            window.history.back();
        }                       
    } else {
        if ( yDiff > 0 ) {
            console.log("up swipe"); 
        } else { 
            console.log("down swipe");
        }                                                                 
    }
    /* reset values */
    xDown = null;
    yDown = null;                                             
};

function readDeviceOrientation() {                        
    if (Math.abs(window.orientation) === 90) {
        console.log('Landscape');
    } else {
        console.log('Portrait');
    }
    Quagga.stop();
    initQuagga();
}
window.onorientationchange = readDeviceOrientation;

    </script>
</apex:page>